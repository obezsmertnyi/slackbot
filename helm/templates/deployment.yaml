apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubebot
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubebot
  template:
    metadata:
      labels:
        app: kubebot
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
      - name: kubebot
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "750m"
        ports:
        - name: metrics
          containerPort: 9090
        volumeMounts:
        - name: kubebot-storage
          mountPath: "/data"
        env:
        - name: SLACK_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: kubebot-env
              key: slack_auth_token
        - name: SLACK_CHANNEL_ID
          valueFrom:
            secretKeyRef:
              name: kubebot-env
              key: slack_channel_id
        - name: SLACK_APP_TOKEN
          valueFrom:
            secretKeyRef:
              name: kubebot-env
              key: slack_app_token
        - name: YOUR_GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: kubebot-env
              key: your_github_token
        - name: GITHUB_OWNER
          valueFrom:
            secretKeyRef:
              name: kubebot-env
              key: github_owner
        - name: GITHUB_REPO
          valueFrom:
            secretKeyRef:
              name: kubebot-env
              key: github_repo
      volumes:
      - name: kubebot-storage
        persistentVolumeClaim:
          claimName: {{ .Values.persistentVolumeClaim.name }}
